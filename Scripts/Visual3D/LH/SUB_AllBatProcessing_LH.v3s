Set_Use_Processed_Targets
! Recalculate model based items, don't want to use processed bat data
/USE_PROCESSED=FALSE
/RECALC=TRUE
;

Evaluate_Expression
! Compute the distance between ECAP and BALL1, KNOB and BALL1; use this distance to find the frame where impact occurred
/EXPRESSION= DISTANCE(TARGET::ORIGINAL::KNOB,TARGET::ORIGINAL::Ball1)+DISTANCE(TARGET::ORIGINAL::ECAP,TARGET::ORIGINAL::Ball1)
/SIGNAL_TYPES= TARGET
/SIGNAL_FOLDER=ORIGINAL
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME= BatBallDistance
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Event_Global_Minimum
! Define the bat-ball impact event
/RESULT_EVENT_NAME=IMPACT
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=BatBallDistance
/SIGNAL_COMPONENTS=ALL
! /FRAME_OFFSET=0
! /TIME_OFFSET=
! /EVENT_SEQUENCE=
! /EXCLUDE_EVENTS=
! /EVENT_SEQUENCE_INSTANCE=0
! /EVENT_SUBSEQUENCE=
! /SUBSEQUENCE_EXCLUDE_EVENTS=
! /EVENT_SUBSEQUENCE_INSTANCE=0
! /THRESHOLD=
;

Event_Explicit
! Define the first frame as the start of the trial for an event
/EVENT_NAME=START_TRIAL
/FRAME=1
! /TIME=
;

Event_Explicit
! Create an event at the end of the trial
/EVENT_NAME=END_OF_TRIAL
/FRAME=EOF
! /TIME=
;

Metric_Signal_Value_At_Event
! Get the impact frame
/SIGNAL_TYPES=FRAME_NUMBERS
! /SIGNAL_FOLDER=ORIGINAL
/SIGNAL_NAMES=FRAMES
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=IMPACT_FRAME
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
! /SIGNAL_COMPONENTS=
! /COMPONENT_SEQUENCE=
/EVENT_NAME=IMPACT
! /EVENT_INSTANCE=0
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
! /GENERATE_VECTOR_LENGTH_METRIC=FALSE
! /RETAIN_NO_DATA_VALUES=FALSE
;

Event_Explicit
/EVENT_NAME=5FRAME_AFTER_IMPACT
/FRAME=METRIC::PROCESSED::IMPACT_FRAME + 5
! /TIME=
;

Event_Explicit
/EVENT_NAME=5FRAME_BEFORE_IMPACT
/FRAME=METRIC::PROCESSED::IMPACT_FRAME - 5
! /TIME=
;

Compute_Model_Based_Data
! Compute the angular velocity of the bat wrt the LAB coordinate frame
/RESULT_NAME=BAT_ANG_VEL
/FUNCTION=JOINT_VELOCITY
/SEGMENT=Bat
! /REFERENCE_SEGMENT=LAB
! /RESOLUTION_COORDINATE_SYSTEM=LAB
! /USE_CARDAN_SEQUENCE=FALSE
! /NORMALIZATION=FALSE
! /NORMALIZATION_METHOD=
! /NORMALIZATION_METRIC=
! /NEGATEX=FALSE
! /NEGATEY=FALSE
! /NEGATEZ=FALSE
! /AXIS1=X
! /AXIS2=Y
! /AXIS3=Z
! /TREADMILL_DATA=FALSE
! /TREADMILL_DIRECTION=UNIT_VECTOR(0,1,0)
! /TREADMILL_SPEED=0.0
;

Lowpass_Filter
/SIGNAL_TYPES=LINK_MODEL_BASED
! /SIGNAL_FOLDER=ORIGINAL
/SIGNAL_NAMES=BAT_ANG_VEL
! /RESULT_FOLDER=PROCESSED
/RESULT_SUFFIX=FiltComponents
! /FILTER_CLASS=BUTTERWORTH
/FREQUENCY_CUTOFF=20
! /NUM_REFLECTED=6
! /NUM_EXTRAPOLATED=0
! /TOTAL_BUFFER_SIZE=6
! /NUM_BIDIRECTIONAL_PASSES=1
;

Signal_Magnitude
/SIGNAL_TYPES=LINK_MODEL_BASED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=BAT_ANG_VELFiltComponents
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=MAG_BAT_ANG_VEL
/APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Signal_Magnitude
! Compute the magnitude of the x,y,z BAT_ANG_VEL signal to get the magnitude of the angular velocity
/SIGNAL_TYPES=LINK_MODEL_BASED
/SIGNAL_FOLDER=ORIGINAL
/SIGNAL_NAMES=BAT_ANG_VEL
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=MAG_BAT_ANG_VEL_BF
/APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

First_Derivative
! Compute the velocity of ECAP, and SWEET_SPOT landmark
/SIGNAL_TYPES=TARGET+LANDMARK
/SIGNAL_FOLDER=ORIGINAL+ORIGINAL
/SIGNAL_NAMES=ECAP+BAT_SWEET_SPOT
/RESULT_TYPES=DERIVED
! /RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BAT_ECAP_VEL+BAT_SWEET_SPOT_VEL
/APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

GCVSPL
/SIGNAL_TYPES=TARGET+LANDMARK
/SIGNAL_FOLDER=ORIGINAL+ORIGINAL
/SIGNAL_NAMES=ECAP+BAT_SWEET_SPOT
! /SIGNAL_COMPONENTS=
/RESULT_FOLDERS=VELOCITY
! /EVENT_SEQUENCE=
! /EXCLUDE_EVENTS=
! /RESULT_NAME=
! /NUM_SPLINE_ORDER=2
/ERROR_VARIANCE=.000001
/OPTIMIZATION_MODE=3
/DERIVATIVE_ORDER=1
! /MAX_GAP=0
! /FILL_GAPS=FALSE
;

Signal_Magnitude
! Compute the magnitdue of the ECAP and SWEET_SPOT Velocity
/SIGNAL_TYPES=DERIVED+DERIVED+TARGET+LANDMARK
/SIGNAL_FOLDER=PROCESSED+PROCESSED+VELOCITY+VELOCITY
/SIGNAL_NAMES=BAT_ECAP_VEL+BAT_SWEET_SPOT_VEL+ECAP+BAT_SWEET_SPOT
!/RESULT_FOLDERS=PROCESSED
/RESULT_NAME= BAT_ECAP_MAG_VEL+BAT_SWEET_SPOT_MAG_VEL+BAT_ECAP_MAG_VEL_5pt+BAT_SWEET_SPOT_MAG_VEL_5pt
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=
;

Second_Derivative
! Compute the bat acceleration
/SIGNAL_TYPES=TARGET+LANDMARK
/SIGNAL_FOLDER=ORIGINAL+ORIGINAL
/SIGNAL_NAMES=ECAP+BAT_SWEET_SPOT
/RESULT_TYPES= DERIVED
! /RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BAT_ECAP_ACC+BAT_SWEET_SPOT_ACC
/APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

GCVSPL
/SIGNAL_TYPES=TARGET+LANDMARK
/SIGNAL_FOLDER=VELOCITY+VELOCITY
/SIGNAL_NAMES=ECAP+BAT_SWEET_SPOT
! /SIGNAL_COMPONENTS=
/RESULT_FOLDERS=ACCELERATION
! /EVENT_SEQUENCE=
! /EXCLUDE_EVENTS=
! /RESULT_NAME=
! /NUM_SPLINE_ORDER=2
/ERROR_VARIANCE=0.0001
! /OPTIMIZATION_MODE=1
/DERIVATIVE_ORDER=2
! /MAX_GAP=0
! /FILL_GAPS=FALSE
;

Signal_Magnitude
! Compute the magnitude of the bat acceleration
/SIGNAL_TYPES=DERIVED+DERIVED+TARGET+LANDMARK
/SIGNAL_FOLDER=PROCESSED+PROCESSED+ACCELERATION+ACCELERATION
/SIGNAL_NAMES=BAT_ECAP_ACC+BAT_SWEET_SPOT_ACC+ECAP+BAT_SWEET_SPOT
! /RESULT_FOLDERS=PROCESSED
/RESULT_NAME= BAT_ECAP_MAG_ACC+BAT_SWEET_SPOT_MAG_ACC+BAT_ECAP_MAG_ACC_5pt+BAT_SWEET_SPOT_MAG_ACC_5pt

! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=
;

Evaluate_Expression
! Calculate the bat vector
/EXPRESSION= TARGET::ORIGINAL::ECAP - TARGET::ORIGINAL::KNOB
/SIGNAL_TYPES= TARGET
/SIGNAL_FOLDER=ORIGINAL
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BAT_VECTOR
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Evaluate_Expression
! Calculate the ball vector
/EXPRESSION=TARGET::ORIGINAL::Ball1 - TARGET::ORIGINAL::KNOB
/SIGNAL_TYPES=TARGET
/SIGNAL_FOLDER=ORIGINAL
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BALL_VECTOR_KNOB
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Evaluate_Expression
! Orthogonally project the ball vector onto the bat vector
/EXPRESSION= (dot(DERIVED::PROCESSED::BALL_VECTOR_KNOB,DERIVED::PROCESSED::BAT_VECTOR) / dot(DERIVED::PROCESSED::BAT_VECTOR,DERIVED::PROCESSED::BAT_VECTOR)) * DERIVED::PROCESSED::BAT_VECTOR
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME= BALL_PROJECTION_KNOB
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Evaluate_Expression
/EXPRESSION= TARGET::ORIGINAL::Ball1 - TARGET::ORIGINAL::ECAP
/SIGNAL_TYPES=TARGET
/SIGNAL_FOLDER=ORIGINAL
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BALL_VECTOR_ECAP
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Evaluate_Expression
/EXPRESSION= (dot(DERIVED::PROCESSED::BALL_VECTOR_ECAP,DERIVED::PROCESSED::BAT_VECTOR) / dot(DERIVED::PROCESSED::BAT_VECTOR,DERIVED::PROCESSED::BAT_VECTOR)) * DERIVED::PROCESSED::BAT_VECTOR
/SIGNAL_TYPES= DERIVED
/SIGNAL_FOLDER=PROCESSED
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BALL_PROJECTION_ECAP
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Metric_Signal_Value_At_Event
! Get the impact location from the knob and end cap
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=BALL_PROJECTION_ECAP+BALL_PROJECTION_KNOB
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=IMPACT_LOCATION_ECAP+IMPACT_LOCATION_KNOB
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
! /SIGNAL_COMPONENTS=
/COMPONENT_SEQUENCE=ALL
/EVENT_NAME=IMPACT
! /EVENT_INSTANCE=0
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
/GENERATE_VECTOR_LENGTH_METRIC=TRUE
! /RETAIN_NO_DATA_VALUES=FALSE
;

Metric_Signal_Value_At_Event
! Find the ball position at impact, then create a signal of the ball at this position for all frames, used to calculatt launch and spray angle
/SIGNAL_TYPES=TARGET
! /SIGNAL_FOLDER=ORIGINAL
/SIGNAL_NAMES=Ball1
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=BALL_AT_IMPACT
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
! /SIGNAL_COMPONENTS=
/COMPONENT_SEQUENCE=ALL
/EVENT_NAME=IMPACT
! /EVENT_INSTANCE=0
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
! /GENERATE_VECTOR_LENGTH_METRIC=FALSE
! /RETAIN_NO_DATA_VALUES=FALSE
;

Evaluate_Expression
/EXPRESSION= METRIC::PROCESSED::BALL_AT_IMPACT * (1+(FRAME_NUMBERS::ORIGINAL::FRAMES*0))
! /SIGNAL_TYPES=
! /SIGNAL_FOLDER=ORIGINAL
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME= BALL_AT_IMPACT_ALL_TRIAL
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Compute_Planar_Angle
! Compute the launch angle
/SIGNAL_TYPES=TARGET+DERIVED+LANDMARK+LANDMARK
/SIGNAL_FOLDER=ORIGINAL+PROCESSED+ORIGINAL+ORIGINAL
/SIGNAL_NAMES=Ball1+BALL_AT_IMPACT_ALL_TRIAL+LAB_NEW_X_R+LAB_ORIGIN
! /RESULT_FOLDER=PROCESSED
/RESULT_NAME=LAUNCH_ANGLE_ALL
/COMPUTE_3PT_ANGLE=FALSE
/NORMALX=-0.1
/NORMALY=0
/NORMALZ=0
! /REFERENCE_SEGMENT=LAB
/PROJECTION_PLANE=YZ
/USE_RIGHT_HAND_RULE=FALSE
/USE_0_TO_360_DEGREES=FALSE
! /MAX_ALLOWABLE_NORMALIZED_DISTANCE_TO_PLANE=0.1
;

Compute_Planar_Angle
! Compute the spray angle
/SIGNAL_TYPES=TARGET+DERIVED+LANDMARK+LANDMARK
/SIGNAL_FOLDER=ORIGINAL+PROCESSED+ORIGINAL+ORIGINAL
/SIGNAL_NAMES=Ball1+BALL_AT_IMPACT_ALL_TRIAL+LAB_NEW_X_R+LAB_ORIGIN
! /RESULT_FOLDER=PROCESSED
/RESULT_NAME=SPRAY_ANGLE_ALL
/COMPUTE_3PT_ANGLE=FALSE
! /NORMALX=
! /NORMALY=
! /NORMALZ=
/REFERENCE_SEGMENT=LAB
/PROJECTION_PLANE=XY
! /USE_RIGHT_HAND_RULE=TRUE
/USE_0_TO_360_DEGREES=FALSE
! /MAX_ALLOWABLE_NORMALIZED_DISTANCE_TO_PLANE=0.1
;

Evaluate_Expression
! Extract the angle from 5 frames after impact to the last ball frame
/EXPRESSION= Snip(DERIVED::PROCESSED::LAUNCH_ANGLE_ALL, EVENT_LABEL::ORIGINAL::5FRAME_AFTER_IMPACT, EVENT_LABEL::ORIGINAL::END_OF_TRIAL)
!/SIGNAL_TYPES= DERIVED
!/SIGNAL_FOLDER=PROCESSED
!/SIGNAL_NAMES= LAUNCH_ANGLE_ALL
! /RESULT_TYPES=DERIVED
! /RESULT_FOLDERS=PROCESSED
/RESULT_NAME= LAUNCH_ANGLE_AFTER_IMPACT
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Evaluate_Expression
! Extract the angle from 5 frames after impact to the last ball frame
/EXPRESSION= Snip(DERIVED::PROCESSED::SPRAY_ANGLE_ALL, EVENT_LABEL::ORIGINAL::5FRAME_AFTER_IMPACT, EVENT_LABEL::ORIGINAL::END_OF_TRIAL)
!/SIGNAL_TYPES= DERIVED
!/SIGNAL_FOLDER=PROCESSED
!/SIGNAL_NAMES= SPRAY_ANGLE_ALL
! /RESULT_TYPES=DERIVED
! /RESULT_FOLDERS=PROCESSED
/RESULT_NAME= SPRAY_ANGLE_AFTER_IMPACT
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Metric_Mean
! Compute the mean of the launch angle
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=LAUNCH_ANGLE
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
/SIGNAL_TYPES= DERIVED
/SIGNAL_FOLDER= PROCESSED
/SIGNAL_NAMES= LAUNCH_ANGLE_AFTER_IMPACT
/COMPONENT_SEQUENCE=ALL
/EVENT_SEQUENCE=
/EXCLUDE_EVENTS=
/SEQUENCE_PERCENT_START=
/SEQUENCE_PERCENT_END=
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
;

Metric_Mean
! Compute the mean of the spray angle
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=SPRAY_ANGLE
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
/SIGNAL_TYPES= DERIVED
/SIGNAL_FOLDER= PROCESSED
/SIGNAL_NAMES= SPRAY_ANGLE_AFTER_IMPACT
/COMPONENT_SEQUENCE=ALL
/EVENT_SEQUENCE=
/EXCLUDE_EVENTS=
/SEQUENCE_PERCENT_START=
/SEQUENCE_PERCENT_END=
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
;

First_Derivative
! Compute ball velocity
/SIGNAL_TYPES=TARGET
/SIGNAL_FOLDER=ORIGINAL
/SIGNAL_NAMES=Ball1
/RESULT_TYPES=TARGET
/RESULT_FOLDERS=VELOCITY
/RESULT_NAME=Ball1
/APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Signal_Magnitude
! Magnitude of the ball velocity
/SIGNAL_TYPES= TARGET
/SIGNAL_FOLDER= VELOCITY
/SIGNAL_NAMES= Ball1
! /RESULT_FOLDERS=PROCESSED
/RESULT_NAME= BALL_VEL_MAG
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=
;

Evaluate_Expression
! Get the pitch velocity
/EXPRESSION= Snip(DERIVED::PROCESSED::BALL_VEL_MAG, EVENT_LABEL::ORIGINAL::START_TRIAL, EVENT_LABEL::ORIGINAL::5FRAME_BEFORE_IMPACT)
! /SIGNAL_TYPES=
! /SIGNAL_FOLDER=
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME= PITCH_VEL_ALL
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Evaluate_Expression
! Get the ball exit velocity
/EXPRESSION= Snip(DERIVED::PROCESSED::BALL_VEL_MAG, EVENT_LABEL::ORIGINAL::5FRAME_AFTER_IMPACT,  EVENT_LABEL::ORIGINAL::END_OF_TRIAL)
! /SIGNAL_TYPES=
! /SIGNAL_FOLDER=
! /SIGNAL_NAMES=
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=EXIT_VEL_ALL
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
;

Metric_Mean
! Get average pitch velocity
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=PITCH_VEL
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=PITCH_VEL_ALL
/COMPONENT_SEQUENCE=ALL
/EVENT_SEQUENCE=
/EXCLUDE_EVENTS=
/SEQUENCE_PERCENT_START=
/SEQUENCE_PERCENT_END=
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
;

Metric_Mean
! Get average exit velocity
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=EXIT_VEL
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=EXIT_VEL_ALL
/COMPONENT_SEQUENCE=ALL
/EVENT_SEQUENCE=
/EXCLUDE_EVENTS=
/SEQUENCE_PERCENT_START=
/SEQUENCE_PERCENT_END=
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
;

Compute_Model_Based_Data
/RESULT_NAME=BAT_TRANS_ENERGY
/FUNCTION=TRANSLATIONAL_ENERGY_SCALAR
/SEGMENT=Bat
/REFERENCE_SEGMENT=
! /RESOLUTION_COORDINATE_SYSTEM=LAB
! /USE_CARDAN_SEQUENCE=FALSE
! /NORMALIZATION=FALSE
! /NORMALIZATION_METHOD=
! /NORMALIZATION_METRIC=
! /NEGATEX=FALSE
! /NEGATEY=FALSE
! /NEGATEZ=FALSE
! /AXIS1=X
! /AXIS2=Y
! /AXIS3=Z
! /TREADMILL_DATA=FALSE
! /TREADMILL_DIRECTION=UNIT_VECTOR(0,1,0)
! /TREADMILL_SPEED=0.0
;

Compute_Model_Based_Data
/RESULT_NAME=BAT_ROT_ENERGY
/FUNCTION=ROTATIONAL_ENERGY_SCALAR
/SEGMENT=Bat
/REFERENCE_SEGMENT=
! /RESOLUTION_COORDINATE_SYSTEM=LAB
! /USE_CARDAN_SEQUENCE=FALSE
! /NORMALIZATION=FALSE
! /NORMALIZATION_METHOD=
! /NORMALIZATION_METRIC=
! /NEGATEX=FALSE
! /NEGATEY=FALSE
! /NEGATEZ=FALSE
! /AXIS1=X
! /AXIS2=Y
! /AXIS3=Z
! /TREADMILL_DATA=FALSE
! /TREADMILL_DIRECTION=UNIT_VECTOR(0,1,0)
! /TREADMILL_SPEED=0.0
;

Add_Signals
/SIGNAL_TYPES=LINK_MODEL_BASED+LINK_MODEL_BASED
/SIGNAL_FOLDER=ORIGINAL+ORIGINAL
/SIGNAL_NAMES=BAT_ROT_ENERGY+BAT_TRANS_ENERGY
! /COMPONENT_SEQUENCE=
! /RESULT_FOLDER=PROCESSED
/RESULT_NAME= TOTAL_BAT_KE
;

Lowpass_Filter
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=TOTAL_BAT_KE
! /RESULT_FOLDER=PROCESSED
/RESULT_SUFFIX=_FILT
! /FILTER_CLASS=BUTTERWORTH
/FREQUENCY_CUTOFF=30
! /NUM_REFLECTED=6
! /NUM_EXTRAPOLATED=0
! /TOTAL_BUFFER_SIZE=6
/NUM_BIDIRECTIONAL_PASSES=2
;

Metric_Maximum
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME=MAX_BAT_KE+MAX_BAT_KE_FILT
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=TOTAL_BAT_KE+TOTAL_BAT_KE_FILT
! /COMPONENT_SEQUENCE=
/EVENT_SEQUENCE=
/EXCLUDE_EVENTS=
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
! /CREATE_GLOBAL_MAXIMUM=FALSE
;

First_Derivative
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=TOTAL_BAT_KE+TOTAL_BAT_KE_FILT
/RESULT_TYPES=DERIVED
/RESULT_FOLDERS=PROCESSED
/RESULT_NAME=BAT_POWER+BAT_POWER_FILT
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=
;

Metric_Maximum
! /RESULT_METRIC_FOLDER=PROCESSED
/RESULT_METRIC_NAME= MAX_BAT_POWER+MAX_BAT_POWER_FILT
! /APPLY_AS_SUFFIX_TO_SIGNAL_NAME=FALSE
/SIGNAL_TYPES=DERIVED
/SIGNAL_FOLDER=PROCESSED
/SIGNAL_NAMES=BAT_POWER+BAT_POWER_FILT
! /COMPONENT_SEQUENCE=
/EVENT_SEQUENCE=
/EXCLUDE_EVENTS=
/GENERATE_MEAN_AND_STDDEV=FALSE
! /APPEND_TO_EXISTING_VALUES=FALSE
! /CREATE_GLOBAL_MAXIMUM=FALSE
;

